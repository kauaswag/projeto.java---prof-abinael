Algoritmo "BFS_Grafo"

Var
    vertices, i, no, vizinho: inteiro
    inicio: inteiro
    adjacencia: vetor[0..5, 0..5] de inteiro
    grau: vetor[0..5] de inteiro
    fila: vetor[0..100] de inteiro
    frente, tras: inteiro
    visitado: vetor[0..5] de lógico

Procedimento inicializarGrafo()
Inicio
    Para i de 0 até 5 faca
        grau[i] <- 0
        Para j de 0 até 5 faca
            adjacencia[i, j] <- -1
        FimPara
    FimPara
FimProcedimento

Procedimento adicionarAresta(origem: inteiro; destino: inteiro)
Inicio
    adjacencia[origem, grau[origem]] <- destino
    grau[origem] <- grau[origem] + 1

    adjacencia[destino, grau[destino]] <- origem
    grau[destino] <- grau[destino] + 1
FimProcedimento

Procedimento bfs(inicio: inteiro)
Inicio
    Para i de 0 ate 5 faca
        visitado[i] <- falso
    FimPara

    frente <- 0
    tras <- 0
    fila[tras] <- inicio
    tras <- tras + 1
    visitado[inicio] <- verdadeiro

    Enquanto frente < tras faca
        no <- fila[frente]
        frente <- frente + 1

        Escreva(no, " ")

        Para i de 0 ate grau[no] - 1 faca
            vizinho <- adjacencia[no, i]
            Se (nao visitado[vizinho]) entao
                fila[tras] <- vizinho
                tras <- tras + 1
                visitado[vizinho] <- verdadeiro
            FimSe
        FimPara
    FimEnquanto
FimProcedimento

Inicio
    inicializarGrafo()

    adicionarAresta(0, 1)
    adicionarAresta(0, 2)
    adicionarAresta(1, 3)
    adicionarAresta(2, 4)
    adicionarAresta(3, 5)
    adicionarAresta(4, 5)

    Escreval("BFS a partir do vértice 0:")
    bfs(0)

Fimalgoritmo
